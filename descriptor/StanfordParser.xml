<?xml version="1.0" encoding="UTF-8"?>
<analysisEngineDescription xmlns="http://uima.apache.org/resourceSpecifier">
  <frameworkImplementation>org.apache.uima.java</frameworkImplementation>
  <primitive>true</primitive>
  <annotatorImplementationName>de.tudarmstadt.ukp.dkpro.core.stanfordnlp.StanfordParser</annotatorImplementationName>
  <analysisEngineMetaData>
    <name>de.tudarmstadt.ukp.dkpro.core.stanfordnlp.StanfordParser</name>
    <description>Stanford Parser component.</description>
    <version>1.5.0</version>
    <vendor>DKPro Core Project</vendor>
    <copyright>Copyright 2010
							Ubiquitous Knowledge Processing (UKP) Lab
							Technische Universitt Darmstadt</copyright>
    <configurationParameters searchStrategy="language_fallback">
      <configurationParameter>
        <name>printTagSet</name>
        <description>Write the tag set(s) to the log when a model is loaded.</description>
        <type>Boolean</type>
        <multiValued>false</multiValued>
        <mandatory>true</mandatory>
      </configurationParameter>
      <configurationParameter>
        <name>language</name>
        <description>Use this language instead of the document language to resolve the model and tag set mapping.</description>
        <type>String</type>
        <multiValued>false</multiValued>
        <mandatory>false</mandatory>
      </configurationParameter>
      <configurationParameter>
        <name>modelVariant</name>
        <description>Variant of a model the model. Used to address a specific model if here are multiple models
for one language.</description>
        <type>String</type>
        <multiValued>false</multiValued>
        <mandatory>false</mandatory>
      </configurationParameter>
      <configurationParameter>
        <name>modelLocation</name>
        <description>Location from which the model is read.</description>
        <type>String</type>
        <multiValued>false</multiValued>
        <mandatory>false</mandatory>
      </configurationParameter>
      <configurationParameter>
        <name>posMappingLocation</name>
        <description>Location of the mapping file for part-of-speech tags to UIMA types.</description>
        <type>String</type>
        <multiValued>false</multiValued>
        <mandatory>false</mandatory>
      </configurationParameter>
      <configurationParameter>
        <name>writeDependency</name>
        <description>Sets whether to create or not to create dependency annotations. &lt;br/&gt;
Default: true</description>
        <type>Boolean</type>
        <multiValued>false</multiValued>
        <mandatory>true</mandatory>
      </configurationParameter>
      <configurationParameter>
        <name>createCollapsedDependencies</name>
        <description>Sets whether to create or not to create collapsed dependencies. &lt;br/&gt;
Default: false</description>
        <type>Boolean</type>
        <multiValued>false</multiValued>
        <mandatory>false</mandatory>
      </configurationParameter>
      <configurationParameter>
        <name>writeConstituent</name>
        <description>Sets whether to create or not to create constituent tags. This is required for POS-tagging
and lemmatization.&lt;br/&gt;
Default: true</description>
        <type>Boolean</type>
        <multiValued>false</multiValued>
        <mandatory>true</mandatory>
      </configurationParameter>
      <configurationParameter>
        <name>writePennTree</name>
        <description>If this parameter is set to true, each sentence is annotated with a PennTree-Annotation,
containing the whole parse tree in Penn Treebank style format.&lt;br/&gt;
Default: false</description>
        <type>Boolean</type>
        <multiValued>false</multiValued>
        <mandatory>true</mandatory>
      </configurationParameter>
      <configurationParameter>
        <name>annotationTypeToParse</name>
        <description>This parameter can be used to override the standard behavior which uses the &lt;i&gt;Sentence&lt;/i&gt;
annotation as the basic unit for parsing.&lt;br/&gt;
If the parameter is set with the name of an annotation type &lt;i&gt;x&lt;/i&gt;, the parser will no
longer parse &lt;i&gt;Sentence&lt;/i&gt;-annotations, but &lt;i&gt;x&lt;/i&gt;-Annotations.&lt;br/&gt;
Default: null</description>
        <type>String</type>
        <multiValued>false</multiValued>
        <mandatory>false</mandatory>
      </configurationParameter>
      <configurationParameter>
        <name>writePOS</name>
        <description>Sets whether to create or not to create POS tags. The creation of constituent tags must be
turned on for this to work.&lt;br/&gt;
Default: true</description>
        <type>Boolean</type>
        <multiValued>false</multiValued>
        <mandatory>true</mandatory>
      </configurationParameter>
      <configurationParameter>
        <name>readPOS</name>
        <description>Sets whether to use or not to use already existing POS tags from another annotator for the
parsing process.&lt;br/&gt;
Default: false</description>
        <type>Boolean</type>
        <multiValued>false</multiValued>
        <mandatory>true</mandatory>
      </configurationParameter>
      <configurationParameter>
        <name>maxTokens</name>
        <description>Maximum number of tokens in a sentence. Longer sentences are not parsed. This is to avoid out
of memory exceptions.&lt;br/&gt;
Default: 130</description>
        <type>Integer</type>
        <multiValued>false</multiValued>
        <mandatory>true</mandatory>
      </configurationParameter>
      <configurationParameter>
        <name>writeLemma</name>
        <description>Sets whether to create or not to create Lemma tags. The creation of constituent tags must be
turned on for this to work.&lt;br/&gt;
This only works for ENGLISH.&lt;br/&gt;
Default:&lt;br/&gt;
&lt;ul&gt;
&lt;li&gt;true, if document text is English&lt;/li&gt;
&lt;li&gt;false, if document text is not English&lt;/li&gt;
&lt;/ul&gt;
&lt;br/&gt;

&lt;strong&gt;Info:&lt;/strong&gt;&lt;br&gt;
The Stanford Morphology-class computes the base form of English words, by removing just
inflections (not derivational morphology). That is, it only does noun plurals, pronoun case,
and verb endings, and not things like comparative adjectives or derived nominals. It is based
on a finite-state transducer implemented by John Carroll et al., written in flex and publicly
available. See: http://www.informatics.susx.ac.uk/research/nlp/carroll/morph.html</description>
        <type>Boolean</type>
        <multiValued>false</multiValued>
        <mandatory>false</mandatory>
      </configurationParameter>
      <configurationParameter>
        <name>ptb3Escaping</name>
        <description>Enable all traditional PTB3 token transforms (like -LRB-, -RRB-).</description>
        <type>Boolean</type>
        <multiValued>false</multiValued>
        <mandatory>true</mandatory>
      </configurationParameter>
      <configurationParameter>
        <name>quoteBegin</name>
        <description>List of extra token texts (usually single character strings) that should be treated like
opening quotes and escaped accordingly before being sent to the parser.</description>
        <type>String</type>
        <multiValued>true</multiValued>
        <mandatory>false</mandatory>
      </configurationParameter>
      <configurationParameter>
        <name>quoteEnd</name>
        <description>List of extra token texts (usually single character strings) that should be treated like
closing quotes and escaped accordingly before being sent to the parser.</description>
        <type>String</type>
        <multiValued>true</multiValued>
        <mandatory>false</mandatory>
      </configurationParameter>
    </configurationParameters>
    <configurationParameterSettings>
      <nameValuePair>
        <name>printTagSet</name>
        <value>
          <boolean>false</boolean>
        </value>
      </nameValuePair>
      <nameValuePair>
        <name>writeDependency</name>
        <value>
          <boolean>true</boolean>
        </value>
      </nameValuePair>
      <nameValuePair>
        <name>createCollapsedDependencies</name>
        <value>
          <boolean>true</boolean>
        </value>
      </nameValuePair>
      <nameValuePair>
        <name>writeConstituent</name>
        <value>
          <boolean>true</boolean>
        </value>
      </nameValuePair>
      <nameValuePair>
        <name>writePennTree</name>
        <value>
          <boolean>false</boolean>
        </value>
      </nameValuePair>
      <nameValuePair>
        <name>writePOS</name>
        <value>
          <boolean>true</boolean>
        </value>
      </nameValuePair>
      <nameValuePair>
        <name>readPOS</name>
        <value>
          <boolean>false</boolean>
        </value>
      </nameValuePair>
      <nameValuePair>
        <name>maxTokens</name>
        <value>
          <integer>130</integer>
        </value>
      </nameValuePair>
      <nameValuePair>
        <name>ptb3Escaping</name>
        <value>
          <boolean>true</boolean>
        </value>
      </nameValuePair>
    </configurationParameterSettings>
    <typeSystemDescription>
      <types>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.morph.Morpheme</name>
          <description/>
          <supertypeName>uima.tcas.Annotation</supertypeName>
          <features>
            <featureDescription>
              <name>morphTag</name>
              <description/>
              <rangeTypeName>uima.cas.String</rangeTypeName>
            </featureDescription>
          </features>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.ADJ</name>
          <description>Adjectives</description>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.ADV</name>
          <description>Adverbs</description>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.ART</name>
          <description>Determiners and articles</description>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.CARD</name>
          <description>Numerals</description>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.CONJ</name>
          <description>Conjunctions</description>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.N</name>
          <description>Nouns</description>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.NN</name>
          <description>Common noun</description>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.N</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.NP</name>
          <description>Noun phrase</description>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.N</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.O</name>
          <description>Catch-all for other categories such as abbreviations or foreign words</description>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS</name>
          <description>The part of speech of a word or a phrase.</description>
          <supertypeName>uima.tcas.Annotation</supertypeName>
          <features>
            <featureDescription>
              <name>PosValue</name>
              <description>The string representation of POS. Mostly it is the POS
                        representation of the wrapped POS tagger.</description>
              <rangeTypeName>uima.cas.String</rangeTypeName>
            </featureDescription>
          </features>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.PP</name>
          <description>Prepositions and postpositions</description>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.PR</name>
          <description>Pronoun</description>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.PRT</name>
          <description>Particles</description>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.PUNC</name>
          <description>Punctuation marks</description>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.V</name>
          <description>Verbs</description>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.tweet.AT</name>
          <description>at-mention (indicates another user as a recipient of a tweet)</description>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.O</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.tweet.DM</name>
          <description>discourse marker, indications of continuation of a message across multiple tweets</description>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.O</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.tweet.EMO</name>
          <description>emoticon</description>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.O</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.tweet.HASH</name>
          <description>Hashtag (indicates topic/category for tweet)</description>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.O</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.tweet.INT</name>
          <description>proper noun + verbal</description>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.O</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.tweet.NNV</name>
          <description>nominal + verbal</description>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.N</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.tweet.NPV</name>
          <description>proper noun + verbal</description>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.N</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.tweet.URL</name>
          <description>URL or email address</description>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.O</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.metadata.type.DocumentMetaData</name>
          <description/>
          <supertypeName>uima.tcas.DocumentAnnotation</supertypeName>
          <features>
            <featureDescription>
              <name>documentTitle</name>
              <description>The human readable title of the document.</description>
              <rangeTypeName>uima.cas.String</rangeTypeName>
            </featureDescription>
            <featureDescription>
              <name>documentId</name>
              <description>The id of the document.</description>
              <rangeTypeName>uima.cas.String</rangeTypeName>
            </featureDescription>
            <featureDescription>
              <name>documentUri</name>
              <description>The URI of the document.</description>
              <rangeTypeName>uima.cas.String</rangeTypeName>
            </featureDescription>
            <featureDescription>
              <name>collectionId</name>
              <description>The ID of the whole document collection.</description>
              <rangeTypeName>uima.cas.String</rangeTypeName>
            </featureDescription>
            <featureDescription>
              <name>documentBaseUri</name>
              <description>Base URI of the document.</description>
              <rangeTypeName>uima.cas.String</rangeTypeName>
            </featureDescription>
            <featureDescription>
              <name>isLastSegment</name>
              <description>CAS de-multipliers need to know whether a CAS is the
						last multiplied segment.
						Thus CAS multipliers should set this field to true for the last CAS
						they produce.</description>
              <rangeTypeName>uima.cas.Boolean</rangeTypeName>
            </featureDescription>
          </features>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.metadata.type.TagDescription</name>
          <description>Description of an individual tag.</description>
          <supertypeName>uima.cas.TOP</supertypeName>
          <features>
            <featureDescription>
              <name>name</name>
              <description>The name of the tag.</description>
              <rangeTypeName>uima.cas.String</rangeTypeName>
            </featureDescription>
          </features>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.metadata.type.TagsetDescription</name>
          <description>Information about a tagset (controlled vocabulary).</description>
          <supertypeName>uima.tcas.Annotation</supertypeName>
          <features>
            <featureDescription>
              <name>layer</name>
              <description>The layer to which the tagset applies. This is
						typically the name of an UIMA type such as
						"de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS".</description>
              <rangeTypeName>uima.cas.String</rangeTypeName>
            </featureDescription>
            <featureDescription>
              <name>name</name>
              <description>The name of the tagset.</description>
              <rangeTypeName>uima.cas.String</rangeTypeName>
            </featureDescription>
            <featureDescription>
              <name>tags</name>
              <description>Descriptions of the tags belonging to this tagset.</description>
              <rangeTypeName>uima.cas.FSArray</rangeTypeName>
              <elementType>de.tudarmstadt.ukp.dkpro.core.api.metadata.type.TagDescription</elementType>
            </featureDescription>
          </features>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Compound</name>
          <description>This type represents a decompounding word, i.e.: flowerpot. Each Compound one have at least two Splits.</description>
          <supertypeName>uima.tcas.Annotation</supertypeName>
          <features>
            <featureDescription>
              <name>splits</name>
              <description>A word that can be decomposed into different parts.</description>
              <rangeTypeName>uima.cas.FSArray</rangeTypeName>
              <elementType>de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Split</elementType>
            </featureDescription>
          </features>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.CompoundPart</name>
          <description>A CompoundPart represents one fragment from the compounding word. Besides that, it can store other CompoundParts if it can be split again. The way it stores a decompounding word represents a decompounding tree.</description>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Split</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Document</name>
          <description/>
          <supertypeName>uima.tcas.Annotation</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Heading</name>
          <description/>
          <supertypeName>uima.tcas.Annotation</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Lemma</name>
          <description/>
          <supertypeName>uima.tcas.Annotation</supertypeName>
          <features>
            <featureDescription>
              <name>value</name>
              <description/>
              <rangeTypeName>uima.cas.String</rangeTypeName>
            </featureDescription>
          </features>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.LinkingMorpheme</name>
          <description>This type represents a linking morpheme between two CompoundParts.</description>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Split</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.NGram</name>
          <description/>
          <supertypeName>uima.tcas.Annotation</supertypeName>
          <features>
            <featureDescription>
              <name>text</name>
              <description/>
              <rangeTypeName>uima.cas.String</rangeTypeName>
            </featureDescription>
          </features>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Paragraph</name>
          <description/>
          <supertypeName>uima.tcas.Annotation</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Sentence</name>
          <description/>
          <supertypeName>uima.tcas.Annotation</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Split</name>
          <description>This type represents a part of a decompounding word. A Split can be either a CompoundPart or a LinkingMorpheme.</description>
          <supertypeName>uima.tcas.Annotation</supertypeName>
          <features>
            <featureDescription>
              <name>splits</name>
              <description>Sub-splits of the current split.</description>
              <rangeTypeName>uima.cas.FSArray</rangeTypeName>
              <elementType>de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Split</elementType>
            </featureDescription>
          </features>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Stem</name>
          <description/>
          <supertypeName>uima.tcas.Annotation</supertypeName>
          <features>
            <featureDescription>
              <name>value</name>
              <description/>
              <rangeTypeName>uima.cas.String</rangeTypeName>
            </featureDescription>
          </features>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.StopWord</name>
          <description/>
          <supertypeName>uima.tcas.Annotation</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token</name>
          <description>Token is one of the two types commonly produced by a segmenter (the other being {@link Sentence}). A Token usually represents a word, although it may be used to represent multiple tightly connected words (e.g. "New York") or parts of a word (e.g. the possessive "'s"). One may choose to split compound words into multiple tokens, e.g. ("CamelCase" -&gt; "Camel", "Case"; "Zauberstab" -&gt; "Zauber", "stab"). Most processing components operate on Tokens, usually within the limits of the surrounding Sentence. E.g. a part-of-speech tagger analyses each Token in a Sentence and assigns a part-of-speech to each Token.
&lt;p&gt;</description>
          <supertypeName>uima.tcas.Annotation</supertypeName>
          <features>
            <featureDescription>
              <name>parent</name>
              <description>the parent of this token. This feature is meant to be used in when the token participates in a constituency parse and then refers to a constituent containing this token. The type of this feature is {@link Annotation} to avoid adding a dependency on the syntax API module.</description>
              <rangeTypeName>uima.tcas.Annotation</rangeTypeName>
            </featureDescription>
            <featureDescription>
              <name>lemma</name>
              <description/>
              <rangeTypeName>de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Lemma</rangeTypeName>
            </featureDescription>
            <featureDescription>
              <name>stem</name>
              <description/>
              <rangeTypeName>de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Stem</rangeTypeName>
            </featureDescription>
            <featureDescription>
              <name>pos</name>
              <description/>
              <rangeTypeName>de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS</rangeTypeName>
            </featureDescription>
          </features>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.structure.type.Field</name>
          <description/>
          <supertypeName>uima.tcas.Annotation</supertypeName>
          <features>
            <featureDescription>
              <name>name</name>
              <description>the name of the tag</description>
              <rangeTypeName>uima.cas.String</rangeTypeName>
            </featureDescription>
          </features>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.PennTree</name>
          <description>The Penn Treebank-style phrase structure string</description>
          <supertypeName>uima.tcas.Annotation</supertypeName>
          <features>
            <featureDescription>
              <name>PennTree</name>
              <description>Contains a Penn Treebank-style representation of a tree.</description>
              <rangeTypeName>uima.cas.String</rangeTypeName>
            </featureDescription>
            <featureDescription>
              <name>TransformationNames</name>
              <description>The name(s) of the transformation(s) that have been performed on the PennTree</description>
              <rangeTypeName>uima.cas.String</rangeTypeName>
            </featureDescription>
          </features>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.Tag</name>
          <description>A multi purpose tag</description>
          <supertypeName>uima.tcas.Annotation</supertypeName>
          <features>
            <featureDescription>
              <name>value</name>
              <description/>
              <rangeTypeName>uima.cas.String</rangeTypeName>
            </featureDescription>
          </features>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.chunk.ADJC</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.chunk.Chunk</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.chunk.ADVC</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.chunk.Chunk</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.chunk.CONCJ</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.chunk.Chunk</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.chunk.Chunk</name>
          <description/>
          <supertypeName>uima.tcas.Annotation</supertypeName>
          <features>
            <featureDescription>
              <name>chunkValue</name>
              <description/>
              <rangeTypeName>uima.cas.String</rangeTypeName>
            </featureDescription>
          </features>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.chunk.INTJ</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.chunk.Chunk</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.chunk.LST</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.chunk.Chunk</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.chunk.NC</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.chunk.Chunk</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.chunk.O</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.chunk.Chunk</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.chunk.PC</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.chunk.Chunk</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.chunk.PRT</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.chunk.Chunk</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.chunk.VC</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.chunk.Chunk</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.ADJP</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.ADVP</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.CONJP</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent</name>
          <description/>
          <supertypeName>uima.tcas.Annotation</supertypeName>
          <features>
            <featureDescription>
              <name>constituentType</name>
              <description/>
              <rangeTypeName>uima.cas.String</rangeTypeName>
            </featureDescription>
            <featureDescription>
              <name>parent</name>
              <description>The parent constituent</description>
              <rangeTypeName>uima.tcas.Annotation</rangeTypeName>
            </featureDescription>
            <featureDescription>
              <name>children</name>
              <description/>
              <rangeTypeName>uima.cas.FSArray</rangeTypeName>
              <elementType>uima.tcas.Annotation</elementType>
            </featureDescription>
            <featureDescription>
              <name>syntacticFunction</name>
              <description/>
              <rangeTypeName>uima.cas.String</rangeTypeName>
            </featureDescription>
          </features>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.FRAG</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.INTJ</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.LST</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.NAC</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.NP</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.NX</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.PP</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.PRP</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.PRT</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.QP</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.ROOT</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.RRC</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.S</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.SBAR</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.SBARQ</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.SINV</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.SQ</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.UCP</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.VP</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.WHADJP</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.WHADVP</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.WHNP</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.WHPP</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.X</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.ABBREV</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.ACOMP</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.ADVCL</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.ADVMOD</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.AGENT</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.AMOD</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.APPOS</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.ATTR</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.AUX0</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.AUXPASS</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.CC</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.CCOMP</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.COMPLM</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.CONJ</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.CONJP</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.CONJ_YET</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.COP</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.CSUBJ</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.CSUBJPASS</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.DEP</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.DET</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.DOBJ</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency</name>
          <description>A dependency relation between two tokens. The dependency annotation begin and end offsets correspond to those of the dependent.</description>
          <supertypeName>uima.tcas.Annotation</supertypeName>
          <features>
            <featureDescription>
              <name>Governor</name>
              <description>The governor word</description>
              <rangeTypeName>de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token</rangeTypeName>
            </featureDescription>
            <featureDescription>
              <name>Dependent</name>
              <description>The dependent word</description>
              <rangeTypeName>de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token</rangeTypeName>
            </featureDescription>
            <featureDescription>
              <name>DependencyType</name>
              <description>The dependency type</description>
              <rangeTypeName>uima.cas.String</rangeTypeName>
            </featureDescription>
          </features>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.EXPL</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.INFMOD</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.IOBJ</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.MARK</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.MEASURE</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.MWE</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.NEG</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.NN</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.NPADVMOD</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.NSUBJ</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.NSUBJPASS</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.NUM</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.NUMBER</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.PARATAXIS</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.PARTMOD</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.PCOMP</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.POBJ</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.POSS</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.POSSESSIVE</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.PRECONJ</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.PRED</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.PREDET</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.PREP</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.PREPC</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.PRT</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.PUNCT</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.PURPCL</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.QUANTMOD</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.RCMOD</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.REF</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.REL</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.TMOD</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.XCOMP</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency</supertypeName>
        </typeDescription>
        <typeDescription>
          <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.XSUBJ</name>
          <description/>
          <supertypeName>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency</supertypeName>
        </typeDescription>
      </types>
    </typeSystemDescription>
    <typePriorities/>
    <fsIndexCollection/>
    <capabilities/>
    <operationalProperties>
      <modifiesCas>true</modifiesCas>
      <multipleDeploymentAllowed>true</multipleDeploymentAllowed>
      <outputsNewCASes>false</outputsNewCASes>
    </operationalProperties>
  </analysisEngineMetaData>
</analysisEngineDescription>
