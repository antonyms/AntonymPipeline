<?xml version="1.0" encoding="UTF-8"?>
<analysisEngineDescription xmlns="http://uima.apache.org/resourceSpecifier">
  <frameworkImplementation>org.apache.uima.java</frameworkImplementation>
  <primitive>false</primitive>
  <delegateAnalysisEngineSpecifiers>
    <delegateAnalysisEngine key="HolingOutputIndexedFS">
      <import name="org.jobimtext.holing.output.HolingOutputIndexedFS"/>
    </delegateAnalysisEngine>
    <delegateAnalysisEngine key="DependencyAnnotator">
      <import location="DependencyAnnotator.xml"/>
    </delegateAnalysisEngine>
    <delegateAnalysisEngine key="StanfordSegmenter">
      <import name="StanfordSegmenter"/>
    </delegateAnalysisEngine>
    <delegateAnalysisEngine key="SimpleDocumentSplitter">
      <import name="org.jobimtext.ingestion.SimpleDocumentSplitter"/>
    </delegateAnalysisEngine>
    <delegateAnalysisEngine key="StanfordParser">
      <import name="StanfordParser"/>
    </delegateAnalysisEngine>
    <delegateAnalysisEngine key="CollectionReader">
      <import name="org.jobimtext.ingestion.CollectionReader"/>
    </delegateAnalysisEngine>
  </delegateAnalysisEngineSpecifiers>
  <analysisEngineMetaData>
    <name>StanfordHolingOperation</name>
    <description/>
    <version>1.0</version>
    <vendor/>
    <configurationParameters searchStrategy="language_fallback">
      <configurationParameter>
        <name>InputPath</name>
        <description>Input path for source ingestion.</description>
        <type>String</type>
        <multiValued>true</multiValued>
        <mandatory>false</mandatory>
        <overrides>
          <parameter>CollectionReader/InputPath</parameter>
        </overrides>
      </configurationParameter>
      <configurationParameter>
        <name>InputFilePattern</name>
        <description>Extensions for input files.</description>
        <type>String</type>
        <multiValued>false</multiValued>
        <mandatory>false</mandatory>
        <overrides>
          <parameter>CollectionReader/FilePattern</parameter>
        </overrides>
      </configurationParameter>
      <configurationParameter>
        <name>OutputPath</name>
        <type>String</type>
        <multiValued>false</multiValued>
        <mandatory>true</mandatory>
        <overrides>
          <parameter>HolingOutputIndexedFS/OutputPath</parameter>
        </overrides>
      </configurationParameter>
      <configurationParameter>
        <name>ExtractorConfigurationFile</name>
        <type>String</type>
        <multiValued>false</multiValued>
        <mandatory>false</mandatory>
        <overrides>
          <parameter>HolingOutputIndexedFS/ExtractorConfigurationFile</parameter>
        </overrides>
      </configurationParameter>
      <configurationParameter>
        <name>DocumentAnnotation</name>
        <type>String</type>
        <multiValued>false</multiValued>
        <mandatory>false</mandatory>
        <overrides>
          <parameter>HolingOutputIndexedFS/DocumentAnnotation</parameter>
        </overrides>
      </configurationParameter>
      <configurationParameter>
        <name>DocumentAnnotationId</name>
        <type>String</type>
        <multiValued>false</multiValued>
        <mandatory>false</mandatory>
        <overrides>
          <parameter>HolingOutputIndexedFS/DocumentAnnotationId</parameter>
        </overrides>
      </configurationParameter>
      <configurationParameter>
        <name>printTagSet</name>
        <description>Write the tag set(s) to the log when a model is loaded.</description>
        <type>Boolean</type>
        <multiValued>false</multiValued>
        <mandatory>true</mandatory>
        <overrides>
          <parameter>StanfordParser/printTagSet</parameter>
        </overrides>
      </configurationParameter>
      <configurationParameter>
        <name>language</name>
        <description>Use this language instead of the document language to resolve the model and tag set mapping.</description>
        <type>String</type>
        <multiValued>false</multiValued>
        <mandatory>false</mandatory>
        <overrides>
          <parameter>StanfordParser/language</parameter>
        </overrides>
      </configurationParameter>
      <configurationParameter>
        <name>modelVariant</name>
        <description>Variant of a model the model. Used to address a specific model if here are multiple models
for one language.</description>
        <type>String</type>
        <multiValued>false</multiValued>
        <mandatory>false</mandatory>
        <overrides>
          <parameter>StanfordParser/modelVariant</parameter>
        </overrides>
      </configurationParameter>
      <configurationParameter>
        <name>modelLocation</name>
        <description>Location from which the model is read.</description>
        <type>String</type>
        <multiValued>false</multiValued>
        <mandatory>false</mandatory>
        <overrides>
          <parameter>StanfordParser/modelLocation</parameter>
        </overrides>
      </configurationParameter>
      <configurationParameter>
        <name>posMappingLocation</name>
        <description>Location of the mapping file for part-of-speech tags to UIMA types.</description>
        <type>String</type>
        <multiValued>false</multiValued>
        <mandatory>false</mandatory>
        <overrides>
          <parameter>StanfordParser/posMappingLocation</parameter>
        </overrides>
      </configurationParameter>
      <configurationParameter>
        <name>writeDependency</name>
        <description>Sets whether to create or not to create dependency annotations. &lt;br/&gt;
Default: true</description>
        <type>Boolean</type>
        <multiValued>false</multiValued>
        <mandatory>true</mandatory>
        <overrides>
          <parameter>StanfordParser/writeDependency</parameter>
        </overrides>
      </configurationParameter>
      <configurationParameter>
        <name>createCollapsedDependencies</name>
        <description>Sets whether to create or not to create collapsed dependencies. &lt;br/&gt;
Default: false</description>
        <type>Boolean</type>
        <multiValued>false</multiValued>
        <mandatory>false</mandatory>
        <overrides>
          <parameter>StanfordParser/createCollapsedDependencies</parameter>
        </overrides>
      </configurationParameter>
      <configurationParameter>
        <name>writeConstituent</name>
        <description>Sets whether to create or not to create constituent tags. This is required for POS-tagging
and lemmatization.&lt;br/&gt;
Default: true</description>
        <type>Boolean</type>
        <multiValued>false</multiValued>
        <mandatory>true</mandatory>
        <overrides>
          <parameter>StanfordParser/writeConstituent</parameter>
        </overrides>
      </configurationParameter>
      <configurationParameter>
        <name>writePennTree</name>
        <description>If this parameter is set to true, each sentence is annotated with a PennTree-Annotation,
containing the whole parse tree in Penn Treebank style format.&lt;br/&gt;
Default: false</description>
        <type>Boolean</type>
        <multiValued>false</multiValued>
        <mandatory>true</mandatory>
        <overrides>
          <parameter>StanfordParser/writePennTree</parameter>
        </overrides>
      </configurationParameter>
      <configurationParameter>
        <name>annotationTypeToParse</name>
        <description>This parameter can be used to override the standard behavior which uses the &lt;i&gt;Sentence&lt;/i&gt;
annotation as the basic unit for parsing.&lt;br/&gt;
If the parameter is set with the name of an annotation type &lt;i&gt;x&lt;/i&gt;, the parser will no
longer parse &lt;i&gt;Sentence&lt;/i&gt;-annotations, but &lt;i&gt;x&lt;/i&gt;-Annotations.&lt;br/&gt;
Default: null</description>
        <type>String</type>
        <multiValued>false</multiValued>
        <mandatory>false</mandatory>
        <overrides>
          <parameter>StanfordParser/annotationTypeToParse</parameter>
        </overrides>
      </configurationParameter>
      <configurationParameter>
        <name>writePOS</name>
        <description>Sets whether to create or not to create POS tags. The creation of constituent tags must be
turned on for this to work.&lt;br/&gt;
Default: true</description>
        <type>Boolean</type>
        <multiValued>false</multiValued>
        <mandatory>true</mandatory>
        <overrides>
          <parameter>StanfordParser/writePOS</parameter>
        </overrides>
      </configurationParameter>
      <configurationParameter>
        <name>readPOS</name>
        <description>Sets whether to use or not to use already existing POS tags from another annotator for the
parsing process.&lt;br/&gt;
Default: false</description>
        <type>Boolean</type>
        <multiValued>false</multiValued>
        <mandatory>true</mandatory>
        <overrides>
          <parameter>StanfordParser/readPOS</parameter>
        </overrides>
      </configurationParameter>
      <configurationParameter>
        <name>maxTokens</name>
        <description>Maximum number of tokens in a sentence. Longer sentences are not parsed. This is to avoid out
of memory exceptions.&lt;br/&gt;
Default: 130</description>
        <type>Integer</type>
        <multiValued>false</multiValued>
        <mandatory>true</mandatory>
        <overrides>
          <parameter>StanfordParser/maxTokens</parameter>
        </overrides>
      </configurationParameter>
      <configurationParameter>
        <name>writeLemma</name>
        <description>Sets whether to create or not to create Lemma tags. The creation of constituent tags must be
turned on for this to work.&lt;br/&gt;
This only works for ENGLISH.&lt;br/&gt;
Default:&lt;br/&gt;
&lt;ul&gt;
&lt;li&gt;true, if document text is English&lt;/li&gt;
&lt;li&gt;false, if document text is not English&lt;/li&gt;
&lt;/ul&gt;
&lt;br/&gt;

&lt;strong&gt;Info:&lt;/strong&gt;&lt;br&gt;
The Stanford Morphology-class computes the base form of English words, by removing just
inflections (not derivational morphology). That is, it only does noun plurals, pronoun case,
and verb endings, and not things like comparative adjectives or derived nominals. It is based
on a finite-state transducer implemented by John Carroll et al., written in flex and publicly
available. See: http://www.informatics.susx.ac.uk/research/nlp/carroll/morph.html</description>
        <type>Boolean</type>
        <multiValued>false</multiValued>
        <mandatory>false</mandatory>
        <overrides>
          <parameter>StanfordParser/writeLemma</parameter>
        </overrides>
      </configurationParameter>
      <configurationParameter>
        <name>ptb3Escaping</name>
        <description>Enable all traditional PTB3 token transforms (like -LRB-, -RRB-).</description>
        <type>Boolean</type>
        <multiValued>false</multiValued>
        <mandatory>true</mandatory>
        <overrides>
          <parameter>StanfordParser/ptb3Escaping</parameter>
        </overrides>
      </configurationParameter>
      <configurationParameter>
        <name>quoteBegin</name>
        <description>List of extra token texts (usually single character strings) that should be treated like
opening quotes and escaped accordingly before being sent to the parser.</description>
        <type>String</type>
        <multiValued>true</multiValued>
        <mandatory>false</mandatory>
        <overrides>
          <parameter>StanfordParser/quoteBegin</parameter>
        </overrides>
      </configurationParameter>
      <configurationParameter>
        <name>quoteEnd</name>
        <description>List of extra token texts (usually single character strings) that should be treated like
closing quotes and escaped accordingly before being sent to the parser.</description>
        <type>String</type>
        <multiValued>true</multiValued>
        <mandatory>false</mandatory>
        <overrides>
          <parameter>StanfordParser/quoteEnd</parameter>
        </overrides>
      </configurationParameter>
    </configurationParameters>
    <configurationParameterSettings>
      <nameValuePair>
        <name>ExtractorConfigurationFile</name>
        <value>
          <string>config/extractor_stanf_np.xml</string>
        </value>
      </nameValuePair>
      <nameValuePair>
        <name>OutputPath</name>
        <value>
          <string>output_stanford</string>
        </value>
      </nameValuePair>
      <nameValuePair>
        <name>createCollapsedDependencies</name>
        <value>
          <boolean>true</boolean>
        </value>
      </nameValuePair>
      <nameValuePair>
        <name>InputPath</name>
        <value>
          <array>
            <string>../org.jobimtext.examples.oss/corpus</string>
          </array>
        </value>
      </nameValuePair>
      <nameValuePair>
        <name>InputFilePattern</name>
        <value>
          <string>txt</string>
        </value>
      </nameValuePair>
      <nameValuePair>
        <name>printTagSet</name>
        <value>
          <boolean>true</boolean>
        </value>
      </nameValuePair>
      <nameValuePair>
        <name>writeDependency</name>
        <value>
          <boolean>true</boolean>
        </value>
      </nameValuePair>
      <nameValuePair>
        <name>writeConstituent</name>
        <value>
          <boolean>false</boolean>
        </value>
      </nameValuePair>
      <nameValuePair>
        <name>writePennTree</name>
        <value>
          <boolean>true</boolean>
        </value>
      </nameValuePair>
      <nameValuePair>
        <name>writePOS</name>
        <value>
          <boolean>true</boolean>
        </value>
      </nameValuePair>
      <nameValuePair>
        <name>readPOS</name>
        <value>
          <boolean>false</boolean>
        </value>
      </nameValuePair>
      <nameValuePair>
        <name>maxTokens</name>
        <value>
          <integer>35</integer>
        </value>
      </nameValuePair>
      <nameValuePair>
        <name>ptb3Escaping</name>
        <value>
          <boolean>true</boolean>
        </value>
      </nameValuePair>
    </configurationParameterSettings>
    <flowConstraints>
      <fixedFlow>
        <node>CollectionReader</node>
        <node>SimpleDocumentSplitter</node>
        <node>StanfordSegmenter</node>
        <node>StanfordParser</node>
        <node>DependencyAnnotator</node>
        <node>HolingOutputIndexedFS</node>
      </fixedFlow>
    </flowConstraints>
    <fsIndexCollection/>
    <capabilities>
      <capability>
        <inputs/>
        <outputs/>
        <languagesSupported/>
      </capability>
    </capabilities>
    <operationalProperties>
      <modifiesCas>true</modifiesCas>
      <multipleDeploymentAllowed>false</multipleDeploymentAllowed>
      <outputsNewCASes>false</outputsNewCASes>
    </operationalProperties>
  </analysisEngineMetaData>
  <resourceManagerConfiguration/>
</analysisEngineDescription>
